# 
#  Readout of an SRS using a TIpcie as a trigger source
#
#    Bryan Moffit, TJNAF 2015
#

readout list GEN_USER
maximum 1024,512
polling
general readout

# TRIG_MODE = TIP_READOUT_EXT_POLL for polling mode (External front panel input)
#           = TIP_READOUT_TS_POLL  for polling mode (TS input)
const TRIG_MODE = TIP_READOUT_EXT_POLL
const BLOCKLEVEL = 1

# PULSER_TRIGGER 
#   is for pedestal and/or debugging. 
#  Set to 0 to use TS inputs or TS Fiber Connection (TRIG_MODE above)
const PULSER_TRIGGER = 1


%%
extern int bigendian_out;
int srsFD;
#include "srsLib.h"
%%

############################################################
# DOWNLOAD
############################################################
begin download

# Sending little-endian (Linux-ROC) to little-endian (Linux-EB)
bigendian_out = 1;

%%
{
  /*************************************************************
   * Setup TIpcie 
   */
  tipInit(TRIG_MODE,0);

  tipLoadTriggerTable(0);
    
  tipSetTriggerHoldoff(1,4,0);
  tipSetTriggerHoldoff(2,4,0);

  tipSetPrescale(0);
  tipSetBlockLevel(BLOCKLEVEL);

  if(PULSER_TRIGGER)
    tipSetTriggerSource(TIP_TRIGGER_PULSER);
  else
    tipSetTriggerSource(TIP_TRIGGER_TSINPUTS);

  tipSetBusySource(TIP_BUSY_LOOPBACK ,1);

  tipSetBlockBufferLevel(1);

  tipSetSyncEventInterval(0);

  /*************************************************************
   * Setup SRS 
   */
  if(srsConnect((int*)&srsFD)==0) 
    printf("socket created. .. (%d)\n",srsFD);
  else
    printf("%s: ERROR: Socket to SRS not open\n",
	   __FUNCTION__);

  srsExecConfigFile("../test/config/set_IP10012.txt");
  srsExecConfigFile("../test/config/adc_IP10012.txt");
  srsExecConfigFile("../test/config/fecCalPulse_IP10012.txt");
  srsExecConfigFile("../test/config/apv_IP10012.txt");
  srsExecConfigFile("../test/config/fecAPVreset_IP10012.txt");
  srsExecConfigFile("../test/config/pll_IP10012.txt");

}
%%
  log inform "TIPCIE SRS Download Executed"

end download
    
############################################################
# PRESTART
############################################################
begin prestart

  variable jj, adc_id

  log inform "Entering TIPCIE SRS Prestart"

  init trig source GEN
  link sync trig source GEN 1 to tipcie_trig and tipcie_trig_done
  event type 1 then read GEN 1

  log inform "TIPCIE SRS Prestart Executed"

%%
{
  tipSetBlockLimit(0);
  tipStatus(1);

  srsStatus("10.0.1.2",0);

  tipTrigLinkReset();
  usleep(10000);
  tipSyncReset(1);

}
%%

end prestart

############################################################
# GO
############################################################
begin go
  
  log inform "Entering TIPCIE SRS Go"

%%
{
  srsExecConfigFile("../test/config/start_IP10012.txt");

  srsStatus("10.0.1.2",0);

  tipStatus(1);

  CDOENABLE(GEN,1,0);
  
  if(PULSER_TRIGGER)
    tipSetRandomTrigger(1,0x7);
  
}
%%

  log inform "TIPCIE SRS Go Executed"

end go


############################################################
# END
############################################################
begin end

%%
{
  if(PULSER_TRIGGER)
  tipDisableRandomTrigger();

  CDODISABLE(GEN,1,0);

  tipStatus(1);

  srsExecConfigFile("../test/config/stop_IP10012.txt");
  srsStatus("10.0.1.2",0);
}
%%

  log inform "TIPCIE SRS End Executed"

end end

############################################################
# PAUSE
############################################################
begin pause

  CDODISABLE(GEN,1,0);

  log inform "TIPCIE SRS Pause Executed"

end pause

############################################################
# TRIGGER
############################################################
begin trigger tipcie_trig

 variable ii, event_ty, event_no

 event_ty = EVTYPE;
 event_no = *rol->nevents;

 rol->dabufp = (long *) 0;
 open event type EVTYPE of BT_BANK

%%
 {
   /************************************************************
    * TI READOUT
    */

   int dCnt=0;

   CBOPEN(0, BT_UI4, 0);

   dCnt = tipReadBlock((volatile unsigned int *)rol->dabufp,32,0);
   if(dCnt<=0)
     {
       printf("**************************************************\n");
       printf("%6d: No TI data or error.  dCnt = %d\n",event_no,dCnt);
       printf("**************************************************\n");

       if(TRIG_MODE==TIP_READOUT_EXT_POLL)
	 tipSetBlockLimit(1); /* Effectively... stop triggers */
     }
   else
     rol->dabufp += dCnt;

   CBCLOSE;

   /************************************************************
    * SRS READOUT
    */

   CBOPEN(1, BT_UI4, 0);

   dCnt = srsReadBlock(srsFD, 
		       (volatile unsigned int *)rol->dabufp,
		       20*1024, BLOCKLEVEL);
   if(dCnt<=0)
     {
       printf("**************************************************\n");
       printf("%6d: No SRS data or error.  dCnt = %d\n",event_no,dCnt);
       printf("**************************************************\n");
     }
   else
     {
       rol->dabufp += dCnt;
     }      
   
   CBCLOSE;
   
 }
%%

 close event

end trigger

begin done tipcie_trig

end done

############################################################
# DONE (TRIGGER ACKNOWLEDGE)
############################################################
begin done
  CDOACK(GEN,1,0);
end done

begin status

end status


%%
int rocClose()
{
  srsExecConfigFile("config/stop_IP10012.txt");
  sleep(1);
  close(srsFD);
}
%%
